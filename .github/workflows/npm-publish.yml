name: "📦 Publish › NPM Package"
run-name: "📦 Publish › NPM Package"

on:
    workflow_dispatch:

jobs:

    # ---------------------------------------------------------------------------------------
    #   JOB > INITIALIZE
    # ---------------------------------------------------------------------------------------

    job-initialize:
        name: "📦 Publish › Initialize"
        runs-on: ubuntu-latest
        outputs:
          package_version: ${{ steps.task_initialize_package_getversion.outputs.current-version }}
        permissions:
            contents: read
            packages: write
        steps:

            - name: "✅ Start"
              id: task_initialize_start
              run: | 
                    echo "Starting build"

            # ---------------------------------------------------------------------------------------
            #   Job > Initialize > Checkout
            # ---------------------------------------------------------------------------------------

            - name: "☑️ Checkout"
              id: task_initialize_checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            # ---------------------------------------------------------------------------------------
            #   Get version from package.json VERSION value
            # ---------------------------------------------------------------------------------------

            - name: Get Package Version
              id: task_initialize_package_getversion
              run: |
                VER=$(cat package.json | jq -r '.version')
                echo "PACKAGE_VERSION=$VER" >> $GITHUB_OUTPUT

            - name: "🪪 .ENV › Read"
              id: dotenv-output
              run: |
                echo "VERSION: ${{ env.PACKAGE_VERSION }}"

    dist-release:
      name: >-
        📦 Github › Release
      runs-on: ubuntu-latest
      needs: [ job-initialize, job-initialize, job-initialize ]
      env:
        PACKAGE_VERSION: ${{ needs.job-initialize.outputs.package_version }}
      if: |
        always()
        && contains(needs.*.result, 'success')
        && !contains(needs.*.result, 'failure')
      permissions:
        contents: write
      steps:

          # ---------------------------------------------------------------------------------------
          #   Dist Releases > Checkout
          # ---------------------------------------------------------------------------------------

          - name: "☑️ Checkout"
            uses: actions/checkout@v4
            with:
              fetch-depth: 0

          - name: "🪪 Test Next Job Version"
            id: dotenv-output
            run: |
              echo "VERSION: ${{ env.PACKAGE_VERSION }}"